// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package types

type BaseResponse struct {
	Code int    `json:"code"`
	Msg  string `json:"msg"`
}

type BatchDeleteRequest struct {
	ConversationIDs []int64 `json:"conversation_ids"`
}

type Conversation struct {
	ID              int64     `json:"id"`
	UserID          int64     `json:"user_id,omitempty"`
	CharacterID     int64     `json:"character_id"`
	Title           string    `json:"title"`
	StartTime       string    `json:"start_time"`
	LastMessageTime string    `json:"last_message_time"`
	MessageCount    int       `json:"message_count"`
	Status          int       `json:"status"`             // 1:正常 2:已删除
	Settings        string    `json:"settings,omitempty"` // JSON字符串，存储对话设置
	Messages        []Message `json:"messages,omitempty"`
}

type ConversationHistoryItem struct {
	ConversationID       int64  `json:"conversation_id,omitempty"`
	CharacterID          int64  `json:"character_id"`
	MessageCount         int64  `json:"message_count"`
	ConversationDuration int64  `json:"conversation_duration"`
	LastMessageTime      string `json:"last_message_time`
	LastMessageContent   string `json:"last_message_content`
}

type ConversationListRequest struct {
	Page        int   `form:"page,optional,default=1"`
	PageSize    int   `form:"page_size,optional,default=20"`
	CharacterID int64 `form:"character_id,omitempty"`
	Status      int   `form:"status,optional,default=1"`
	UserID      int64 `form:"user_id,omitempty"`
}

type ConversationListResponse struct {
	Code    int            `json:"code"`
	Msg     string         `json:"msg"`
	List    []Conversation `json:"list"`
	Total   int64          `json:"total"`
	Page    int            `json:"page"`
	HasMore bool           `json:"has_more"`
}

type ConversationRequest struct {
	ID int64 `path:"id"`
}

type ConversationResponse struct {
	Code         int          `json:"code"`
	Msg          string       `json:"msg"`
	Conversation Conversation `json:"conversation"`
}

type CreateConversationRequest struct {
	CharacterID int64  `json:"character_id"`
	Title       string `json:"title,optional,default=新对话"`
}

type CreateConversationResponse struct {
	Code         int          `json:"code"`
	Msg          string       `json:"msg"`
	Conversation Conversation `json:"conversation"`
}

type ExportResponse struct {
	Code     int    `json:"code"`
	Msg      string `json:"msg"`
	Data     string `json:"data"`     // 导出的数据内容
	Format   string `json:"format"`   // 导出格式 json/txt/csv
	Filename string `json:"filename"` // 建议的文件名
}

type Message struct {
	ID             int64  `json:"id"`
	ConversationID int64  `json:"conversation_id"`
	Type           string `json:"type"` // user/ai
	Content        string `json:"content"`
	AudioURL       string `json:"audio_url,omitempty"`
	AudioDuration  int    `json:"audio_duration,omitempty"`
	Timestamp      string `json:"timestamp"`
	Metadata       string `json:"metadata,omitempty"` // JSON字符串，存储额外信息
}

type MessageListRequest struct {
	Page           int   `form:"page,optional,default=1"`
	PageSize       int   `form:"page_size,optional,default=50"`
	ConversationID int64 `form:"conversation_id,omitempty"`
}

type MessageListResponse struct {
	Code     int       `json:"code"`
	Msg      string    `json:"msg"`
	Messages []Message `json:"messages"`
	Total    int64     `json:"total"`
	Page     int       `json:"page"`
	HasMore  bool      `json:"has_more"`
}

type SearchConversationRequest struct {
	Keyword   string `form:"keyword"`
	Page      int    `form:"page,optional,default=1"`
	PageSize  int    `form:"page_size,optional,default=20"`
	UserID    int64  `form:"user_id,omitempty"`
	StartTime string `form:"start_time,omitempty"`
	EndTime   string `form:"end_time,omitempty"`
}

type SendMessageRequest struct {
	ConversationID int64  `json:"conversation_id"`
	CharacterID    int64  `json:"character_id"`
	Content        string `json:"content"`
	Type           string `json:"type,optional,default=text"` // text/audio
	AudioData      string `json:"audio_data,omitempty"`       // base64编码的音频数据
}

type SendMessageResponse struct {
	Code        int     `json:"code"`
	Msg         string  `json:"msg"`
	UserMessage Message `json:"user_message"`
	AIMessage   Message `json:"ai_message"`
}

type UpdateTitleRequest struct {
	Title string `json:"title"`
}

type GetConversationHistoryRequest struct {
	Keyword     string `json:"keyword,optional,omitempty"`
	Page        int    `json:"page,optional,default=1"`
	PageSize    int    `json:"page_size,optional,default=20"`
	UserID      int64  `json:"user_id,optional,omitempty"`
	StartTime   string `json:"start_time,optional,omitempty"`
	EndTime     string `json:"end_time,optional,omitempty"`
	SortBy      int    `json:"sort_by,optional,omitempty"`
	CharacterID int    `json:"character_id,optional,omitempty"`
}

type GetConversationHistoryResponse struct {
	ConversationTotal int                       `json:"conversation_total`
	List              []ConversationHistoryItem `json:"list"`
	CharacterCount    int                       `json:"character_count"`
	MessageCount      int                       `json:"message_count"`
	ActiveDays        int                       `json:"active_days"`
}
