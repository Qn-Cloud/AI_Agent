// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package types

type BaseResponse struct {
	Code int    `json:"code"` // 响应码
	Msg  string `json:"msg"`  // 响应消息
}

type CharacterBrief struct {
	ID            int64    `json:"id"`             // 角色ID
	Name          string   `json:"name"`           // 角色名称
	Avatar        string   `json:"avatar"`         // 角色头像URL
	ShortDesc     string   `json:"short_desc"`     // 角色简介
	CategoryName  string   `json:"category_name"`  // 分类名称
	Tags          []string `json:"tags"`           // 标签列表
	Rating        float64  `json:"rating"`         // 评分(0-5)
	RatingCount   int32    `json:"rating_count"`   // 评分人数
	FavoriteCount int32    `json:"favorite_count"` // 收藏数
	ChatCount     int32    `json:"chat_count"`     // 对话次数
	IsPublic      bool     `json:"is_public"`      // 是否公开
}

type CharacterCategoriesResponse struct {
	Code       int      `json:"code"`       // 响应码
	Msg        string   `json:"msg"`        // 响应消息
	Categories []string `json:"categories"` // 分类列表
}

type CharacterDetailRequest struct {
	ID int64 `path:"id"` // 角色ID
}

type CharacterDetailResponse struct {
	Code      int           `json:"code"`      // 响应码
	Msg       string        `json:"msg"`       // 响应消息
	Character CharacterItem `json:"character"` // 角色详情
}

type CharacterItem struct {
	ID            int64                  `json:"id"`             // 角色ID
	Name          string                 `json:"name"`           // 角色名称
	Avatar        string                 `json:"avatar"`         // 角色头像URL
	Description   string                 `json:"description"`    // 角色描述
	ShortDesc     string                 `json:"short_desc"`     // 角色简介
	CategoryID    int64                  `json:"category_id"`    // 分类ID
	CategoryName  string                 `json:"category_name"`  // 分类名称
	Tags          []string               `json:"tags"`           // 标签列表
	Prompt        string                 `json:"prompt"`         // 角色提示词
	Personality   CharacterPersonality   `json:"personality"`    // 性格设置
	VoiceSettings CharacterVoiceSettings `json:"voice_settings"` // 语音设置
	Status        int32                  `json:"status"`         // 状态：1正常 2禁用
	IsPublic      bool                   `json:"is_public"`      // 是否公开：true公开 false私有
	CreatorID     int64                  `json:"creator_id"`     // 创建者ID，0表示系统预设
	CreatorName   string                 `json:"creator_name"`   // 创建者名称
	Rating        float64                `json:"rating"`         // 评分(0-5)
	RatingCount   int32                  `json:"rating_count"`   // 评分人数
	FavoriteCount int32                  `json:"favorite_count"` // 收藏数
	ChatCount     int32                  `json:"chat_count"`     // 对话次数
}

type CharacterListRequest struct {
	Page       int    `form:"page,optional,default=1"`              // 页码
	PageSize   int    `form:"page_size,optional,default=20"`        // 每页条数
	CategoryID int64  `form:"category_id,optional"`                 // 分类ID
	Tags       string `form:"tags,optional"`                        // 标签，多个用逗号分隔
	Keyword    string `form:"keyword,optional"`                     // 搜索关键词
	OrderBy    string `form:"order_by,optional,default=created_at"` // 排序字段
	OrderDesc  bool   `form:"order_desc,optional,default=true"`     // 是否倒序
}

type CharacterListResponse struct {
	Code  int              `json:"code"`  // 响应码
	Msg   string           `json:"msg"`   // 响应消息
	Total int64            `json:"total"` // 总条数
	Page  *Pagination      `json:"page"`  // 分页信息
	List  []CharacterBrief `json:"list"`  // 角色列表
}

type CharacterPersonality struct {
	Friendliness int `json:"friendliness"` // 友善度 0-100
	Humor        int `json:"humor"`        // 幽默感 0-100
	Intelligence int `json:"intelligence"` // 智力 0-100
	Creativity   int `json:"creativity"`   // 创造力 0-100
	Courage      int `json:"courage"`      // 勇气 0-100
	Wisdom       int `json:"wisdom"`       // 智慧 0-100
	Eloquence    int `json:"eloquence"`    // 口才 0-100
	Observation  int `json:"observation"`  // 观察力 0-100
	Curiosity    int `json:"curiosity"`    // 好奇心 0-100
	Helpfulness  int `json:"helpfulness"`  // 乐于助人 0-100
}

type CharacterTagsResponse struct {
	Code int      `json:"code"` // 响应码
	Msg  string   `json:"msg"`  // 响应消息
	Tags []string `json:"tags"` // 标签列表
}

type CharacterVoiceSettings struct {
	Rate     float64 `json:"rate"`     // 语速 0.1-3.0
	Pitch    float64 `json:"pitch"`    // 音调 0.1-2.0
	Volume   float64 `json:"volume"`   // 音量 0.1-1.0
	VoiceID  string  `json:"voice_id"` // 语音ID
	Language string  `json:"language"` // 语言代码
	Gender   string  `json:"gender"`   // 性别：male/female
	Age      string  `json:"age"`      // 年龄段：child/adult/old
}

type CreateCharacterRequest struct {
	Name          string                 `json:"name"`           // 角色名称
	Avatar        string                 `json:"avatar"`         // 角色头像URL
	Description   string                 `json:"description"`    // 角色描述
	ShortDesc     string                 `json:"short_desc"`     // 角色简介
	CategoryID    int64                  `json:"category_id"`    // 分类ID
	Tags          []string               `json:"tags"`           // 标签列表
	Prompt        string                 `json:"prompt"`         // 角色提示词
	Personality   CharacterPersonality   `json:"personality"`    // 性格设置
	VoiceSettings CharacterVoiceSettings `json:"voice_settings"` // 语音设置
	IsPublic      bool                   `json:"is_public"`      // 是否公开
}

type CreateCharacterResponse struct {
	Code      int           `json:"code"`      // 响应码
	Msg       string        `json:"msg"`       // 响应消息
	Character CharacterItem `json:"character"` // 创建的角色
}

type DeleteCharacterRequest struct {
	ID int64 `path:"id"` // 角色ID
}

type DeleteCharacterResponse struct {
	Code int    `json:"code"` // 响应码
	Msg  string `json:"msg"`  // 响应消息
}

type FavoriteCharacterRequest struct {
	Page     int `form:"page,optional,default=1"`       // 页码
	PageSize int `form:"page_size,optional,default=20"` // 每页条数
}

type FavoriteCharacterResponse struct {
	Code  int              `json:"code"`  // 响应码
	Msg   string           `json:"msg"`   // 响应消息
	Total int64            `json:"total"` // 总条数
	Page  *Pagination      `json:"page"`  // 分页信息
	List  []CharacterBrief `json:"list"`  // 角色列表
}

type MyCharacterRequest struct {
	Page     int `form:"page,optional,default=1"`       // 页码
	PageSize int `form:"page_size,optional,default=20"` // 每页条数
}

type MyCharacterResponse struct {
	Code  int              `json:"code"`  // 响应码
	Msg   string           `json:"msg"`   // 响应消息
	Total int64            `json:"total"` // 总条数
	Page  *Pagination      `json:"page"`  // 分页信息
	List  []CharacterBrief `json:"list"`  // 角色列表
}

type Pagination struct {
	TotalCount int `json:"totalCount"` // 总数
	TotalPage  int `json:"totalPage"`  // 总页数
	Page       int `json:"page"`       // 当前页码
	PageSize   int `json:"pageSize"`   // 每页数量
}

type PopularCharacterRequest struct {
	Page     int `form:"page,optional,default=1"`       // 页码
	PageSize int `form:"page_size,optional,default=20"` // 每页条数
}

type PopularCharacterResponse struct {
	Code  int              `json:"code"`  // 响应码
	Msg   string           `json:"msg"`   // 响应消息
	Total int64            `json:"total"` // 总条数
	Page  *Pagination      `json:"page"`  // 分页信息
	List  []CharacterBrief `json:"list"`  // 角色列表
}

type RecommendedCharacterRequest struct {
	Count int `form:"count,optional,default=10"` // 推荐数量
}

type RecommendedCharacterResponse struct {
	Code  int              `json:"code"`  // 响应码
	Msg   string           `json:"msg"`   // 响应消息
	Total int64            `json:"total"` // 总条数
	Page  *Pagination      `json:"page"`  // 分页信息
	List  []CharacterBrief `json:"list"`  // 角色列表
}

type SearchCharacterRequest struct {
	Keyword  string `form:"keyword"`                       // 搜索关键词
	Page     int    `form:"page,optional,default=1"`       // 页码
	PageSize int    `form:"page_size,optional,default=20"` // 每页条数
}

type SearchCharacterResponse struct {
	Code  int              `json:"code"`  // 响应码
	Msg   string           `json:"msg"`   // 响应消息
	Total int64            `json:"total"` // 总条数
	Page  *Pagination      `json:"page"`  // 分页信息
	List  []CharacterBrief `json:"list"`  // 角色列表
}

type ToggleFavoriteRequest struct {
	ID int64 `path:"id"` // 角色ID
}

type ToggleFavoriteResponse struct {
	Code       int    `json:"code"`        // 响应码
	Msg        string `json:"msg"`         // 响应消息
	IsFavorite bool   `json:"is_favorite"` // 是否已收藏
}

type UpdateCharacterRequest struct {
	ID            int64                  `path:"id"`             // 角色ID
	Name          string                 `json:"name"`           // 角色名称
	Avatar        string                 `json:"avatar"`         // 角色头像URL
	Description   string                 `json:"description"`    // 角色描述
	ShortDesc     string                 `json:"short_desc"`     // 角色简介
	CategoryID    int64                  `json:"category_id"`    // 分类ID
	Tags          []string               `json:"tags"`           // 标签列表
	Prompt        string                 `json:"prompt"`         // 角色提示词
	Personality   CharacterPersonality   `json:"personality"`    // 性格设置
	VoiceSettings CharacterVoiceSettings `json:"voice_settings"` // 语音设置
	Status        int32                  `json:"status"`         // 状态
	IsPublic      bool                   `json:"is_public"`      // 是否公开
}

type UpdateCharacterResponse struct {
	Code      int           `json:"code"`      // 响应码
	Msg       string        `json:"msg"`       // 响应消息
	Character CharacterItem `json:"character"` // 更新后的角色
}

type UpdatePersonalityRequest struct {
	ID          int64                `path:"id"`          // 角色ID
	Personality CharacterPersonality `json:"personality"` // 性格设置
}

type UpdatePersonalityResponse struct {
	Code int    `json:"code"` // 响应码
	Msg  string `json:"msg"`  // 响应消息
}

type UpdatePromptRequest struct {
	ID     int64  `path:"id"`     // 角色ID
	Prompt string `json:"prompt"` // 提示词
}

type UpdatePromptResponse struct {
	Code int    `json:"code"` // 响应码
	Msg  string `json:"msg"`  // 响应消息
}

type UpdateVoiceSettingsRequest struct {
	ID            int64                  `path:"id"`             // 角色ID
	VoiceSettings CharacterVoiceSettings `json:"voice_settings"` // 语音设置
}

type UpdateVoiceSettingsResponse struct {
	Code int    `json:"code"` // 响应码
	Msg  string `json:"msg"`  // 响应消息
}
